name: Build and Release Android App

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm install
        npm install @capacitor/cli @capacitor/core @capacitor/android

    - name: Build Web App
      run: npm run build

    - name: Add Android Platform
      run: npx cap add android

    - name: Update Android Platform
      run: npx cap sync android

    # 添加 Gradle Wrapper
    - name: Setup Gradle
      run: |
        mkdir -p gradle/wrapper
        echo "distributionUrl=https\://services.gradle.org/distributions/gradle-7.6-bin.zip" > gradle/wrapper/gradle-wrapper.properties
        wget https://raw.githubusercontent.com/gradle/gradle/master/gradle/wrapper/gradle-wrapper.jar -P gradle/wrapper/
        wget https://raw.githubusercontent.com/gradle/gradle/master/gradlew -O gradlew
        chmod +x gradlew

    - name: Make Gradlew Executable
      run: chmod +x ./android/gradlew

    - name: Generate Debug Keystore
      run: |
        keytool -genkey -v -keystore debug.keystore \
        -keyalg RSA \
        -keysize 2048 \
        -validity 10000 \
        -alias androiddebugkey \
        -storepass android \
        -keypass android \
        -dname "CN=Android Debug,O=Android,C=US"
        mkdir -p android/app/keystore/
        mv debug.keystore android/app/keystore/

    - name: Build Android APK
      run: |
        cd android
        ./gradlew assembleDebug

    - name: Sign Android Release
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: android/app/build/outputs/apk/debug
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}

    # 上传构建产物
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: clipboard-app-${{ github.sha }}
        path: android/app/build/outputs/apk/debug/*.apk
        retention-days: 90

    # 创建 Release
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: android/app/build/outputs/apk/debug/app-debug.apk
        name: Release ${{ github.ref_name }}
        body: |
          Build Time (UTC): ${{ steps.current-time.outputs.timestamp }}
          Built by: ${{ github.actor }}
          Commit: ${{ github.sha }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
